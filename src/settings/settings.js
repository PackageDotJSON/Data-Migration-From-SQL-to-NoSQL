const DATABASE_QUERIES = {
  CREATE_DATABASE_CRM:   `CREATE DATABASE IF NOT EXISTS CRM`,
  CREATE_TABLE_USER:     `CREATE TABLE IF NOT EXISTS CRM.USER(USER_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
                          USER_NAME VARCHAR(50), USER_PASSWORD VARCHAR(20), USER_ROLE VARCHAR(12))`,
  CREATE_TABLE_CUSTOMER: `CREATE TABLE IF NOT EXISTS CRM.CUSTOMER(CUSTOMER_ID INT NOT NULL AUTO_INCREMENT 
                          PRIMARY KEY, CUSTOMER_NAME VARCHAR(50), CUSTOMER_PHONE_NO VARCHAR(20), 
                          REGISTRAION_TIME DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP)`,
  CREATE_TABLE_PRODUCT:  `CREATE TABLE IF NOT EXISTS CRM.PRODUCT(PRODUCT_ID INT NOT NULL AUTO_INCREMENT 
                          PRIMARY KEY, PRODUCT_NAME VARCHAR(50), PRODUCT_PRICE INT, PRODUCT_QUANTITY INT, 
                          REGISTRATION_TIME DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP)`,                       
  CREATE_TABLE_INVOICE:  `CREATE TABLE IF NOT EXISTS CRM.INVOICE(INVOICE_ID INT NOT NULL AUTO_INCREMENT 
                          PRIMARY KEY, CHECKOUT_TIME DATETIME NOT NULL DEFAULT 
                          CURRENT_TIMESTAMP, INVOICE_CUSTOMER_ID INT, INVOICE_USER_ID INT, 
                          INVOICE_PRODUCT_ID INT, FOREIGN KEY(INVOICE_CUSTOMER_ID) REFERENCES 
                          CUSTOMER(CUSTOMER_ID), FOREIGN KEY(INVOICE_USER_ID) REFERENCES USER(USER_ID),
                          FOREIGN KEY(INVOICE_PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID))`,
  CREATE_TABLE_ACTIVITY: `CREATE TABLE IF NOT EXISTS CRM.ACTIVITY(ACTIVITY_ID INT NOT NULL AUTO_INCREMENT 
                          PRIMARY KEY, ACTIVITY_TITLE VARCHAR(50), ACTIVITY_DESCRIPTION VARCHAR(200), 
                          ACTIVITY_CUSTOMER_ID INT, ACTIVITY_USER_ID INT, FOREIGN KEY(ACTIVITY_CUSTOMER_ID) 
                          REFERENCES CUSTOMER(CUSTOMER_ID), FOREIGN KEY(ACTIVITY_USER_ID) REFERENCES 
                          USER(USER_ID))`,
  CREATE_TABLE_REMINDER: `CREATE TABLE IF NOT EXISTS CRM.REMINDER(REMINDER_ID INT NOT NULL AUTO_INCREMENT
                          PRIMARY KEY, REMINDER_TITLE VARCHAR(50), REMINDER_DESCRIPTION VARCHAR(200),
                          REMINDER_DATE DATETIME NOT NULL, REMINDER_STATUS VARCHAR(12), REMINDER_USER_ID INT, 
                          FOREIGN KEY(REMINDER_USER_ID) REFERENCES USER(USER_ID))`,
  AUTHENTICATE:          `SELECT USER_ID, USER_NAME, USER_ROLE FROM CRM.USER WHERE 
                          USER_NAME = ? AND USER_PASSWORD = ?`,
  ADD_PRODUCT:           `INSERT INTO CRM.PRODUCT(PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_QUANTITY) 
                          VALUES (?, ?, ?)`,
  SEARCH_PRODUCT:        `SELECT * FROM CRM.PRODUCT WHERE PRODUCT_NAME = ?`,
  GET_PRODUCTS:          `SELECT * FROM CRM.PRODUCT`,
  ADD_USER:              `INSERT INTO CRM.USER(USER_NAME, USER_PASSWORD, USER_ROLE) VALUES (?, ?, ?)`,
  SEARCH_USER:           `SELECT USER_ID, USER_NAME, USER_ROLE FROM CRM.USER WHERE USER_NAME = ?`,
  DELETE_USER:           `DELETE FROM CRM.USER WHERE USER_ID = ?`,
  GET_USERS:             `SELECT USER_ID, USER_NAME FROM CRM.USER`,
  ADD_CUSTOMER:          `INSERT INTO CRM.CUSTOMER(CUSTOMER_NAME, CUSTOMER_PHONE_NO) VALUES (?, ?)`,
  SEARCH_CUSTOMER:       `SELECT * FROM CRM.CUSTOMER WHERE CUSTOMER_NAME = ?`,
  GET_CUSTOMERS:         `SELECT * FROM CRM.CUSTOMER`,
  UPDATE_CUSTOMER:       `UPDATE CRM.CUSTOMER SET CUSTOMER_NAME = ?, CUSTOMER_PHONE_NO = ? 
                          WHERE CUSTOMER_ID = ?`,
  ADD_INVOICE:           `INSERT INTO CRM.INVOICE(INVOICE_CUSTOMER_ID, INVOICE_USER_ID, 
                          INVOICE_PRODUCT_ID) VALUES (?, ?, ?)`,
  GET_INVOICE:           `SELECT CRM.INVOICE.INVOICE_ID, CRM.PRODUCT.PRODUCT_PRICE, CRM.INVOICE.CHECKOUT_TIME, 
                          CRM.CUSTOMER.CUSTOMER_NAME, CRM.CUSTOMER.CUSTOMER_ID, CRM.PRODUCT.PRODUCT_NAME 
                          FROM CRM.INVOICE INNER JOIN CRM.CUSTOMER ON 
                          CRM.INVOICE.INVOICE_CUSTOMER_ID = CRM.CUSTOMER.CUSTOMER_ID
                          INNER JOIN CRM.PRODUCT ON CRM.INVOICE.INVOICE_PRODUCT_ID = CRM.PRODUCT.PRODUCT_ID`,
  ADD_ACTIVITY:          `INSERT INTO CRM.ACTIVITY(ACTIVITY_TITLE, ACTIVITY_DESCRIPTION, ACTIVITY_CUSTOMER_ID,
                          ACTIVITY_USER_ID) VALUES (?, ?, ?, ?)`,
  GET_ACTIVITY:          `SELECT CRM.ACTIVITY.ACTIVITY_ID, CRM.ACTIVITY.ACTIVITY_TITLE, 
                          CRM.ACTIVITY.ACTIVITY_DESCRIPTION, CRM.ACTIVITY.ACTIVITY_CUSTOMER_ID, 
                          CRM.ACTIVITY.ACTIVITY_USER_ID, CRM.CUSTOMER.CUSTOMER_NAME, CRM.USER.USER_NAME 
                          FROM CRM.ACTIVITY INNER JOIN CRM.CUSTOMER ON 
                          CRM.CUSTOMER.CUSTOMER_ID = CRM.ACTIVITY.ACTIVITY_CUSTOMER_ID INNER JOIN CRM.USER ON 
                          CRM.USER.USER_ID = CRM.ACTIVITY.ACTIVITY_USER_ID`,
  ADD_REMINDER:          `INSERT INTO CRM.REMINDER(REMINDER_TITLE, REMINDER_DESCRIPTION, REMINDER_DATE, 
                          REMINDER_STATUS, REMINDER_USER_ID) VALUES (?, ?, ?, ?, ?)`,
  GET_REMINDER:          `SELECT CRM.REMINDER.REMINDER_ID, CRM.REMINDER.REMINDER_TITLE, 
                          CRM.REMINDER.REMINDER_DESCRIPTION, CRM.REMINDER.REMINDER_DATE, 
                          CRM.REMINDER.REMINDER_STATUS FROM CRM.REMINDER INNER JOIN CRM.USER 
                          ON CRM.USER.USER_ID = CRM.REMINDER.REMINDER_USER_ID WHERE 
                          CRM.USER.USER_ID = ?`,
  UPDATE_REMINDER:       `UPDATE CRM.REMINDER SET REMINDER_TITLE = ?, 
                          REMINDER_DESCRIPTION = ?, REMINDER_DATE = ?, REMINDER_STATUS = ?
                          WHERE REMINDER_ID = ?`,
  DELETE_REMINDER:       `DELETE FROM CRM.REMINDER WHERE REMINDER_ID = ?`,
  FLUSH_DATA:            `SET FOREIGN_KEY_CHECKS = 0; TRUNCATE TABLE CRM.USER; TRUNCATE TABLE CRM.CUSTOMER; TRUNCATE TABLE CRM.PRODUCT;
                          TRUNCATE TABLE CRM.INVOICE; TRUNCATE TABLE CRM.ACTIVITY; TRUNCATE TABLE CRM.REMINDER; SET FOREIGN_KEY_CHECKS = 1;`
};

module.exports = DATABASE_QUERIES;
